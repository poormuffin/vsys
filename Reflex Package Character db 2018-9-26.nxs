{"name":"character db","enabled":true,"description":"A character database","type":"group","id":1,"items":[{"type":"function","name":"README","enabled":true,"id":13,"code":"/*\nThis is a beta version of a characterDB (nameDB). \nIf you have questions please reach out.\n\nIf you do not see colourized lists in the player list\narea of the client after a few minutes of loading up\nthe game try CDB ONLOAD to reload the base system.\n\n/////////In Game Commands////////////\n\ncdb\t\t\t\t\t\tshow this list in game\ncdb onload \t\t\t\treload cdb in case something goes wrong\ncdb update\t\t\t\tupdate data for everyone who is currently online\ncdb citizens [city]\t\tshow all users in this house that we have stored\ncdb class [class]\t\tshow all users of this class that we have stored\ncdb whois [character]\tshow cached info on this user\ncdb house [house]\t\tshow all characters in this house\ncdb stats\t\t\t\tshow users per city\n\n/////////////API//////////////////////\n\nYou can use these commands in your scripts\n\ncdb.exists \t\treturn if a character exists in the DB, you should call this before calling other API functions!\n\ncdb_getByName\tget character info and add to the DB, does not return anything\ncdb_get_rank \treturn ranking for the character\ncdb_get_city\treturn a players city\ncdb_get_class\treturn a players class\ncdb_get_level\treturn a players level\ncdb_get_pk\t\treturn a players kill count\ncdb_get_house\treturn a players house\n\n//////////////////TODO///////////////////\n2: work on a way to update (hidden) city and class\n3: add a notes section\n4: stats, convert to showing #'s in city/class\n5: add a last seen thing\n\n//-->"},{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"//Initialize variables\ncdb = {};\ncdb.characterServerList = {};\ncdb.manualCharacterServerList = {};\ncdb.city_colours = {};\ncdb.inverted_city_colours = {};\ncdb.city_list = {};\n\n//get a single person from the API and add them to the DB\ngetCharacterByURI = function(uri) {\n\t$.getJSON( uri, function( data ) {\n        if (cdb.characterServerList[data.name]) {\n            cdb.characterServerList[data.name] = data;\n            //cdb.characterServerList[data.name].lastSeen = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n        }else{\n            cdb.characterServerList[data.name] = data;\n            //cdb.characterServerList[data.name].lastSeen = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n            $('<style id=\"roomliststyles\">#'+data.name.toLowerCase()+' { color: '+ cdb.city_colours[data.city] +'; }</style>').appendTo('head');\n        }\n        if(cdb.manualCharacterServerList[data.name]) {\n            if(cdb.manualCharacterServerList[data.name].city) {\n                data.city = cdb.manualCharacterServerList[data.name].city;\n            }\n        } \n\t});\n    loadCSS();\n};\n\ngetCharacterByName = function(name) {\n    $.getJSON( \"https://api.achaea.com/characters/\" + name.toLowerCase() + \".json\", function ( data ) {\n        if (cdb.characterServerList[data.name]) {\n            cdb.characterServerList[data.name] = data;\n            //cdb.characterServerList[data.name].lastSeen = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n        }else{\n            cdb.characterServerList[data.name] = data;\n            //cdb.characterServerList[data.name].lastSeen = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n            $('<style id=\"roomliststyles\">#'+data.name.toLowerCase()+' { color: '+ cdb.city_colours[data.city] +'; }</style>').appendTo('head');\n        }\n        if(cdb.manualCharacterServerList[data.name]) {\n            if(cdb.manualCharacterServerList[data.name].city) {\n                data.city = cdb.manualCharacterServerList[data.name].city;\n            }\n        } \n\t});\n    loadCSS();\n};\n              \n\n//Get full list online and call getCharacter on each to add them to the DB\ngetCharacterServerList = function(mode) {\n\t$.getJSON( \"https://api.achaea.com/characters.json\", function( data ) {\n\t\tif(mode == \"full\") {\n\t\t\tfor ( i = 0; i < data.characters.length; i++) {\n\t\t\t\tgetCharacterByURI(data.characters[i].uri);\n\t\t\t}\n\t\t\tsetTimeout(saveDB, 2000);\n            setTimeout(showDBUpdateString, 2000);\n\t\t}\n\t});\n};\n\n//update db function\nshowDBUpdateString = function() {\n    display_notice(\"Character DB updated \"+ getCharacterCount() + \" entries in database. If the online list does not colourize after one minute of loading use CDB ONLOAD\",\"yellow\");\n}\n\n//save the DB\nsaveDB = function() {\n    set_variable(\"nameDB\",cdb);\n}\n\n//Get a count of all characters in the DB\ngetCharacterCount = function() {\n\ti = 0;\n\tfor(var key in cdb.characterServerList) {\n\t\ti++;\n\t}\n\treturn i;\n};\n\n//add replaceAll function to String\nString.prototype.replaceAll = function(search, replacement) {\n    var target = this;\n    return target.replace(new RegExp(search, 'g'), replacement);\n};\n\n//Capitalize first letter of the string\nfixCaps = function(aword) {\n    return aword.charAt(0).toUpperCase() + aword.substr(1).toLowerCase();\n}\n\n//gather names from the database and apply colour to thier divs\nloadCSS = function() {\n    var someCSS = \"\";\n    for(var key in cdb.characterServerList) {\n        if (cdb.characterServerList[key]) {\n\t\t\tsomeCSS = someCSS + \"#\" + cdb.characterServerList[key].name.toLowerCase() + \" { color:\" + cdb.city_colours[cdb.characterServerList[key].city] + \";} \";\n        }\n\t}\n    $('<style id=\"roomliststyles\">'+ someCSS + '</style>').appendTo('head');\n}\n\n//MUTATIONS===================================================\n\n//Check if the list in who's online is updated and if so apply city colours\n\nloadMutations = function () {\n    var mutationObserver = new MutationObserver(function(mutations) {\n      mutations.forEach(function(mutation) {\n        if(mutation.addedNodes[0]) {\n            name = mutation.addedNodes[0].innerText;\n            if (cdb.characterServerList[name]) {\n                city = cdb.characterServerList[name].city;\n                mutation.addedNodes[0].style = \"padding: 2px 5px; cursor:pointer; color:\" + cdb.city_colours[city];\n            } else {\n                getCharacterByName(name.toLowerCase());\n            }\n        }\n      });\n    });\n\n    mutationObserver.observe($(\"#div_who_players\")[0], {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n}\n\n//END MUTATIONS===================================================\n\n//API=============================================================\n\n//return if a character exists in the DB\n\ncdb_exists = function(name) {\n    if (cdb.characterServerList[fixCaps(name)]) {\n        return true;\n    }else{\n        return false;\n    }\n}\n\n//get character info and add to the DB, does not return anything\ncdb_getByName = function(name) {\n    getCharacterByName(name);\n}\n\n//return ranking for the character\ncdb_get_rank = function(name) {\n    return cdb.characterServerList[fixCaps(name)].xp_rank;  \n}\n\n//return players city\ncdb_get_city = function(name) {\n    return cdb.characterServerList[fixCaps(name)].city;  \n}\n\n//return players class\ncdb_get_class = function(name) {\n    return cdb.characterServerList[fixCaps(name)].class;  \n}\n\n//return players level\ncdb_get_level = function(name) {\n    return cdb.characterServerList[fixCaps(name)].level;  \n}\n\n//return PK count\ncdb_get_pk = function(name) {\n    return cdb.characterServerList[fixCaps(name)].player_kills;  \n}\n\n//return house\ncdb_get_house = function(name) {\n    return cdb.characterServerList[fixCaps(name)].house;  \n}\n\n//END API=========================================================\n\n//ONLOAD stuff\n\n//load DB if it exists, otherwise create a new one\nif(get_variable(\"nameDB\")) {\n\tcdb = get_variable(\"nameDB\");\n    getCharacterServerList(\"full\");\n    setTimeout(loadCSS, 2000);\n    setTimeout(loadMutations, 20000);\n} else {\n    cdb.city_colours = {\"cyrene\":\"#008080\",\"targossas\":\"#ffffff\",\"eleusis\":\"#00ff00\",\"mhaldor\":\"#ff0000\",\"hashan\":\"#808000\",\"ashtan\":\"#800080\",\"(none)\":\"#c0c0c0\",\"(hidden)\":\"#c0c0c0\"};\n    cdb.inverted_city_colours = { \"#008080\": \"cyrene\", \"#ffffff\": \"targossas\", \"#00ff00\": \"eleusis\", \"#ff0000\": \"mhaldor\", \"#808000\": \"hashan\", \"#800080\": \"ashtan\", \"#c0c0c0\": \"(hidden)\" };\n    cdb.city_list = (\"cyrene\",\"targossas\",\"eleusis\",\"mhaldor\",\"hashan\",\"ashtan\");\n    getCharacterServerList(\"full\");\n    setTimeout(loadCSS, 2000);\n    setTimeout(loadMutations, 20000);\n}"},{"type":"function","name":"onGMCP","enabled":true,"id":11,"code":"if (args.gmcp_method == \"Comm.Channel.Players\"){\n    for ( i = 0; i < args.gmcp_args.length; i++) {\n        if (cdb.characterServerList[args.gmcp_args[i].name]) {\n        } else {\n            getCharacterByName(args.gmcp_args[i].name.toLowerCase());\n        }\n        if(cdb.manualCharacterServerList[args.gmcp_args[i].name]) {\n        \tcdb.manualCharacterServerList[args.gmcp_args[i].name].lastSeen = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n        }else{\n            cdb.manualCharacterServerList[args.gmcp_args[i].name] = {};\n            cdb.manualCharacterServerList[args.gmcp_args[i].name].lastSeen = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n        }\n    }\n}"},{"type":"alias","name":"cdb update","enabled":true,"id":3,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\n\ngetCharacterServerList(\"full\");"}],"text":"cdb update"},{"type":"alias","name":"","enabled":true,"id":4,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"function","fn":"onLoad"}],"text":"cdb onload"},{"type":"alias","name":"cdb citizens","enabled":true,"id":6,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var findInCity = args[1].toLowerCase();\n\nvar inCity = \"\";\nvar i = 0;\n\nfor(var key in cdb.characterServerList) {\n    if(cdb.characterServerList[key].city == findInCity) {\n        inCity = inCity + \", \" + cdb.characterServerList[key].name;\n        i++;\n    }\n}\n\nif (inCity.length == 0) {\n    display_notice(\"Noone found in \" + findInCity + \" check your spelling.\",\"yellow\");\n} else {\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'></br>\" + Array(findInCity.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'><span style='color: \" + cdb.city_colours[findInCity] + \"'>\"+fixCaps(findInCity)+\"<span style='color:#808000'> - \" + i + \"</span></span></div>\");\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'>\" + Array(findInCity.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\" + inCity.substr(2) + \"</div>\");\n}"}],"text":"cdb citizens (.*)"},{"type":"alias","name":"cdb class","enabled":true,"id":7,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var findInClass = args[1].toLowerCase();\n\nvar inClass = \"\";\nvar i = 0;\n\nfor(var key in cdb.characterServerList) {\n    if(cdb.characterServerList[key].class == findInClass) {\n        inClass = inClass + \", \" + cdb.characterServerList[key].name;\n        i++;\n    }\n}\n\nif (inClass.length == 0) {\n    display_notice(\"Noone found in \" + findInClass + \" check your spelling.\",\"yellow\");\n} else {\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'></br>\" + Array(findInClass.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\"+fixCaps(findInClass)+\"<span style='color:#808000'> - \" + i + \"</span></div>\");\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'>\" + Array(findInClass.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n\tow_Write(\"#output_main\",\"<div class='mono'>\" + inClass.substr(2) + \"</div>\");\n}"}],"text":"cdb class (.*)"},{"type":"alias","name":"cdb whois","enabled":true,"id":8,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var name = \"\"+fixCaps(args[1]);\n\nif(cdb.characterServerList[name]) {\n\n    var fullName = cdb.characterServerList[name].fullname;\n\tvar city = cdb.characterServerList[name].city;\n\tvar aclass = cdb.characterServerList[name].class;\n\tvar house = cdb.characterServerList[name].house;\n\tvar level = cdb.characterServerList[name].level;\n\tvar rank = cdb.characterServerList[name].xp_rank;\n\tvar player_kills = cdb.characterServerList[name].player_kills;\n\n    ow_Write(\"#output_main\",\"<div class='mono'></br>\" + Array(fullName.length + 1).join(\"=\") + \"</div>\");\n\tow_Write(\"#output_main\",\"<div class='mono'><span style='color: #808000'>\"+fullName+\"</span></div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\" + Array(fullName.length + 1).join(\"=\") + \"</div>\");\n\tow_Write(\"#output_main\",\"<div class='mono'><span style='color: #aaaaaa'>City:  <span style='color: \" + cdb.city_colours[city] + \"'>\" + fixCaps(city) + \"<span style='position: absolute;left: 400px;color: #aaaaaa'>Level: <span style='color: #808000'>\" + Array(8).join(\" \") + level + \"</span></span></span></span></div>\");\n\tow_Write(\"#output_main\",\"<div class='mono'><span style='color: #aaaaaa'>Class: <span style='color: #808000'>\" + fixCaps(aclass) + \"<span style='position: absolute;left: 400px;color: #aaaaaa'>Rank: <span style='color: #808000'>\" + Array(9).join(\" \") + rank + \"</span></span></span></span></div>\");\n\tow_Write(\"#output_main\",\"<div class='mono'><span style='color: #aaaaaa'>House: <span style='color: #808000'>\" + fixCaps(house) + \"<span style='position: absolute;left: 400px;color: #aaaaaa'>Player Kills: <span style='color: #808000'>\" + player_kills + \"</span></span></span></span></div>\");\n    if (cdb.manualCharacterServerList[name]) {\n        ow_Write(\"#output_main\",\"<div class='mono'><span style='color: #aaaaaa'>Last Seen: <span style='color: #808000'>\" + cdb.manualCharacterServerList[name].lastSeen + \"</span></span></div>\");\n    }\n    ow_Write(\"#output_main\",\"<div class='mono'></div>\");\n}else{\n    display_notice(\"No \" + name + \" in DB, fetching try again in 1 second\",\"yellow\")\n    getCharacterByName(name);\n}"}],"text":"cdb whois (.*)"},{"type":"alias","name":"cdb house","enabled":true,"id":9,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var findInHouse = args[1].toLowerCase();\n\nvar inHouse = \"\";\nvar i = 0;\n\nfor(var key in cdb.characterServerList) {\n    if(cdb.characterServerList[key].house == findInHouse) {\n        inHouse = inHouse + \", \" + cdb.characterServerList[key].name;\n        i++;\n    }\n}\n\nif (inHouse.length == 0) {\n    display_notice(\"Noone found in \" + findInHouse + \" check your spelling.\",\"yellow\");\n} else {\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'></br>\" + Array(findInHouse.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\"+fixCaps(findInHouse)+\"<span style='color:#808000'> - \" + i + \"</span></div>\");\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'>\" + Array(findInHouse.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\" + inHouse.substr(2) + \"</div>\");\n}"}],"text":"cdb house (.*)"},{"type":"alias","name":"cdb stats","enabled":true,"id":10,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var cities = [];\nvar i = 0;\n\nfor(var key in cdb.characterServerList) {\n    if(cdb.characterServerList[key].city) {\n\t\tcities.push(cdb.characterServerList[key].city);\n    \ti++;\n\t}\n}\ncities = [...new Set(cities)];\n\ncities.forEach(function(element) {\n  \tvar inCity = \"\";\n\tvar i = 0;\n    $(\"tr#cdbcityrow\").last().append(\"<td>\"+element+\"</tr>\");\n\n\tfor(var key in cdb.characterServerList) {\n    \tif(cdb.characterServerList[key].city == element) {\n        \tinCity = inCity + \", \" + cdb.characterServerList[key].name;\n            i++;\n    \t}\n\t}\n    \n\t//display_notice(\"Tracking \" + i + \" Adventurers in \" + fixCaps(element),\"yellow\")\n\t//display_notice(inCity.substr(2),\"yellow\");\n    \n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'></br>\" + Array(element.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'><span style='color: \" + cdb.city_colours[element] + \"'>\"+fixCaps(element)+\"<span style='color:#808000'> - \" + i + \"</span></span></div>\");\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'>\" + Array(element.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\" + inCity.substr(2) + \"</div>\");\n});"}],"text":"cdb stats"},{"type":"alias","name":"","enabled":true,"id":12,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"ow_Write(\"#output_main\",\"<div class='mono'>cdb onload -------------------- reload cdb in case something goes wrong</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb update -------------------- update data for everyone online</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb citizens [city] ----------- show all users in this house</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb class [class] ------------- show all users of this class in the database</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb whois [character] --------- show cached info on this user</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb house [house] ------------- show all characters in this house</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb stats --------------------- show users per city</div>\");\now_Write(\"#output_main\",\"<div class='mono'>cdb change [name] city [City] - change a players city</div>\");"}],"text":"cdb"},{"type":"alias","name":"cdb change player","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//cdb change (name) (city) (City)\n//cdb change Draekar city Targossas\n\nname = fixCaps(args[1]);\n\nif(cdb.characterServerList[fixCaps(args[1])]) {\n    switch(args[2].toLowerCase()) { \n            case \"city\":\n    \t\t\tif(cdb.city_list.includes(args[3].toLowerCase())) {\n                \tcdb.characterServerList[fixCaps(args[1])].city = args[3].toLowerCase();\n                    if(cdb.manualCharacterServerList[name]) {\n                        cdb.manualCharacterServerList[name].city = args[3].toLowerCase();\n                    }else{\n                        cdb.manualCharacterServerList[name] = {};\n                        cdb.manualCharacterServerList[name].city = args[3].toLowerCase();\n                    }\n                    $('<style id=\"roomliststyles\">#'+name.toLowerCase()+' { color: '+ cdb.city_colours[args[3].toLowerCase()] +'; }</style>').appendTo('head');\n                } else {\n                    display_notice(\"Invalid city. Use Cyrene, Targossas, Eleusis, Mhaldor, Hashan or Ashtan.\");\n                }\n                break;\n    }\n}"}],"text":"^cdb change (.*) (.*) (.*)$"},{"type":"trigger","name":"whois trigger","enabled":true,"id":15,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(Your guardian angel senses (.*)) at (.*)\\.","actions":[{"action":"gag"},{"action":"script","script":"//Enter the script here\nvar output = $(\"div.line div:contains('\"+args[1]+\"')\").last();\nif ( cdb.characterServerList[args[2]] ) {\n\tvar acolour = cdb.city_colours[cdb.characterServerList[args[2]].city];\n} else {\n    cdb_getByName(args[2].city);\n    ow_Write(\"#output_main\",\"Your guardian angel senses \"+args[2]);\n}\n\n//output[0].innerHTML = output[0].innerText.replace(args[2],\"<span style='color: \"+acolour+\"'>\"+args[2]+\"</span>\");\n\naline = \"Your guardian angel senses <span style='color: \"+acolour+\"'>\"+args[2]+\"</span> at \" + args[3];\now_Write(\"#output_main\",\"<div class='mono'>\"+aline+\"</div>\");"}]},{"type":"alias","name":"","enabled":true,"id":16,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var houses = [];\nvar i = 0;\n\nfor(var key in cdb.characterServerList) {\n    if(cdb.characterServerList[key].house) {\n\t\thouses.push(cdb.characterServerList[key].house);\n    \ti++;\n\t}\n}\nhouses = [...new Set(houses)];\n\nhouses.forEach(function(element) {\n  \tvar inHouse = \"\";\n\tvar i = 0;\n    $(\"tr#cdbhouserow\").last().append(\"<td>\"+element+\"</tr>\");\n\n\tfor(var key in cdb.characterServerList) {\n    \tif(cdb.characterServerList[key].house == element) {\n        \tinHouse = inHouse + \", \" + cdb.characterServerList[key].name;\n            i++;\n    \t}\n\t}\n    \n\t//display_notice(\"Tracking \" + i + \" Adventurers in \" + fixCaps(element),\"yellow\")\n\t//display_notice(inCity.substr(2),\"yellow\");\n    \n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'></br>\" + Array(element.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'><span style='color: \" + cdb.city_colours[element] + \"'>\"+fixCaps(element)+\"<span style='color:#808000'> - \" + i + \"</span></span></div>\");\n    ow_Write(\"#output_main\",\"<div class='mono' style='color: #808000'>\" + Array(element.length + i.toString().length + 4).join(\"=\") + \"</div>\");\n    ow_Write(\"#output_main\",\"<div class='mono'>\" + inHouse.substr(2) + \"</div>\");\n});"}],"text":"cdb houses"},{"type":"trigger","name":"","enabled":true,"id":17,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"A large, prismatic Wheel of Fortune slows down to a halt","actions":[{"action":"command","command":"spin wheel"}]}]}